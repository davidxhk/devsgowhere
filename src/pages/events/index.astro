---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Theme from "../../layouts/Theme.astro";
import Footer from "../../components/Footer.astro";

import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection } from "astro:content";
import EventCard from "../../components/EventCard.astro";

const orgs = await getCollection("orgs");

const now = new Date();
const events = (await getCollection("events"))
  .filter((event) => {
    const startDate = new Date(event.data.startDate);
    return startDate >= now;
  })
  .sort(
    (a, b) =>
      new Date(a.data.startDate).valueOf() -
      new Date(b.data.startDate).valueOf(),
  );
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <Theme>
    <Header />
    <main class="events-list-page pt-xl pb-3xl">
      <h1 class="text-3xl text-bold text-accent mb-xl">
        Upcoming Events
      </h1>      
      <div class="container">
        <section>
              <div class="event-search form-control">
                <i class="form-control__prepend fa fa-search"></i>
                <input
                  id="event-search__input"
                  type="text"
                  class="form-control__input"
                  placeholder="Search"
                />
              </div>
          <ul class="event-list">
            {
              events.map((event) => (
                <li class="event-list-item" data-id={event.id}>
                  <EventCard event={event} />
                </li>
              ))
            }
          </ul>        
          <div class="event-list__empty" style="display: none;">
            <p class="text-gray-5 text-2xl">No results found!</p>
          </div>
      </div>
    </main>
    <Footer />
  </Theme>
  <script>

    // fetch all events from "events/search-index.json"
    const events = [];
    fetch('/events/search-index.json')
      .then((response) => response.json())
      .then((data) => {
        events.push(...data);
      })
      .catch((error) => {
        console.error(`Error fetching search index for 'events' collection:`, error);
      });

    // listen for input change on search input
    const searchInputEl = document.querySelector('#event-search__input');

    searchInputEl.addEventListener('input', (e) => {
      
      const searchValue = e.target.value.toLowerCase().trim();
      const emptyStateEl = document.querySelector('.event-list__empty');

      // if search value is empty, show all events
      if (searchValue === '') {
        
        // hide "No results found" message
        emptyStateEl.style.display = 'none';
        
        // show all events
        document.querySelectorAll('.event-list-item').forEach((item) => {
          item.classList.remove('hide');
        });

        return;

      }

      // filter events based on search value
      const filteredEvents = events.filter((event) => {
        // check if event name includes search value
        if (event.title.toLowerCase().includes(searchValue)) {
          return true;
        }
        // check if event tags include search value
        if (event.tags.some((tag) => tag.toLowerCase().includes(searchValue))) {
          return true;
        }
        return false;
      });

      // if no events found, show "No results found" message
      if (filteredEvents.length === 0) {
        emptyStateEl.style.display = 'block';
      } else {
        emptyStateEl.style.display = 'none';
      }
      
      // show/hide events based on search value
      document.querySelectorAll('.event-list-item').forEach((item) => {
        const eventId = item.getAttribute('data-id');
        const show = filteredEvents.some((event) => event.id === eventId);
        if (show) {
          item.classList.remove('hide');
        } else {
          item.classList.add('hide');
        }
      });
      
    });

  </script>
</html>

<style lang="scss">
  .events-list-page {
    text-align: center;
  }

  ul.event-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }
</style>

---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

const orgs = (await getCollection("orgs")).sort((a, b) =>
  a.data.title.localeCompare(b.data.title)
);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body class="theme-tech-blue-aquamarine">
    <Header />
    <main class="pt-xl pb-3xl">
      <section></section>
        <div class="container">
            <ul class="org-list">
              {
                orgs.map((org) => (
                  <li class="org-list-item">
                    <a class="card" href={`/orgs/${org.id}/`}>
                      <Image
                        width={360}
                        height={360}
                        src={org.data.heroImage}
                        alt=""
                      />
                      <div class="org-list-item__info p-m">
                        <div class="org-list-item__info__top">
                          <div class="org-name text-2xl text-bold mb-xs">
                            {org.data.title}
                          </div>
                          <div class="org-description text-gray-5 mb-s">
                            {org.data.description.slice(0, 100)}...
                          </div>
                        </div>
                        <div class="org-list-item__info__bottom">
                          <ul class="tag-list">
                            { org.data.tags?.slice(0, 5).map((tag) => (
                              <li class="tag">
                                # {tag}
                              </li>
                            )) }
                          </ul>
                        </div>
                      </div>
                    </a>
                  </li>
                ))
              }
            </ul>
        </div>
      </section>
    </main>
    <Footer />
  </body>
</html>

<style lang="scss">

  .org-list {

    // remove list style
    list-style: none;
    padding: 0;
    margin: 0;

    // display a grid
    display: grid;
    grid-template-columns: 1fr; // on mobile, 1 column
    column-gap: 2rem;
    row-gap: 2rem;

    padding: 0; // on mobile, no padding

    @media (min-width: 768px) {
      & {
        grid-template-columns: repeat(2, 1fr);
        padding: 0 1rem;
      }
    }

    @media (min-width: 1024px) {
      & {
        grid-template-columns: repeat(3, 1fr);
        padding: 0 1rem;
      }
    }

    @media (min-width: 1280px) {
      & {
        padding: 0; // on desktop, no padding
      }
    }
    
  }

  .org-list-item {

    $size: 300px;
    width: 100%;
    min-width: $size;

    // layout
    display: flex;
    flex-direction: column; // this is to make the card stretch

    a {

      display: inline-flex;
      flex-direction: column;
      
      height: 100%;;

      text-decoration: none;
      color: inherit;
      &:visited {
        color: inherit;
      }

    

      // constrain the image to the tile
      img {
        width: 100%;
        // height: 360px;
        max-width: 100%;
        object-fit: cover;
        box-shadow: 0 0 10px 5px rgba(198, 198, 198, 0.3)
      }

      // org info block
      .org-list-item__info {
        flex: 1 1 auto;
        display: flex;
        flex-direction: column;
        justify-content: space-between;

      }

    }

  }

</style>
